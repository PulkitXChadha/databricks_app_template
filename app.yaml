command: [
  "uvicorn",
  "server.app:app"
]

# User Authorization Configuration
# These scopes define what the app can access on behalf of users
# See: https://docs.databricks.com/dev-tools/databricks-apps/auth.html
user_authorization:
  scopes:
    # SQL and Data Access
    - sql                                    # Execute SQL and manage SQL related resources
    - catalog.catalogs:read                  # Read catalogs in Unity Catalog
    - catalog.schemas:read                   # Read schemas in Unity Catalog
    - catalog.tables:read                    # Read tables in Unity Catalog
    - catalog.connections                    # Manage connections to external services and Lakehouse Federation
    
    # Model Serving and Vector Search
    - serving.serving-endpoints              # Manage model serving endpoints
    - vectorsearch.vector-search-indexes     # Manage vector search indexes
    
    # Dashboards and Files
    - dashboards.genie                       # Manage Genie spaces
    - files.files                            # Manage files and directories
    
    # IAM (Default scopes - required)
    - iam.access-control:read                # Read access control settings and permissions (default)
    - iam.current-user:read                  # Read authenticated user's basic information (default)

env:
  # Databricks SDK Configuration (OAuth authentication is automatic)
  # Unity Catalog Configuration
  - name: DATABRICKS_WAREHOUSE_ID
    value: "4b9b953939869799"

  
  # Lakebase Configuration (OAuth authentication is automatic)
  - name: LAKEBASE_INSTANCE_NAME
    value: "databricks-app-lakebase-dev"
  - name: LAKEBASE_HOST
    value: "instance-a8a3c374-0218-48fa-b93a-4eb07b78b9fa.database.cloud.databricks.com"
  - name: PGHOST
    value: "instance-a8a3c374-0218-48fa-b93a-4eb07b78b9fa.database.cloud.databricks.com"
  - name: LAKEBASE_PORT
    value: "5432"
  - name: LAKEBASE_DATABASE
    value: "app_database"
  

  
  # Observability Configuration
  # Valid levels: DEBUG, INFO, WARNING, ERROR, CRITICAL
  # Use DEBUG for verbose logging (includes all requests/responses)
  - name: LOG_LEVEL
    value: "DEBUG"
  - name: LOG_FORMAT
    value: "json"
